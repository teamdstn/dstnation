function init(n) {
  if (n) {
    __g.mixin(require("./mx.strings"));
    __g.until = function n(r, t, e) {
      if (r()) return e();
      t(function(_) {
        if (_) return e(_);
        n(r, t, e);
        return void 0;
      });
      return void 0;
    };
    __g.serial = function(n, r) {
      function t(n, r) {
        n.length ? n.shift()(function(_, i) {
          _ ? r(_, e) : (e.push(i), t(n, r));
        }) : r(null, e);
      }
      var n = n.slice(0), e = [];
      t(n, r);
    };
    __g.parallel = function(n, r) {
      var t = "object" == typeof n ? Object.keys(n).length : n.length, e = {}, _ = !1, i = {};
      t || r(null, i);
      for (var u in n) (function() {
        var a = n[u], c = u;
        pprocess.nextTick(function() {
          a(function(n, u) {
            n && (e[c] = n, _ = !0);
            u && (i[c] = u);
            t--;
            0 == t && r(_ ? e : null, i);
          });
        });
      })();
    };
    __g.serials = function(n, r, t) {
      if (!n.length) return t();
      var e = 0, _ = function() {
        r(n[e], function(r) {
          if (r) {
            t(r);
            t = function() {};
          } else {
            e++;
            e == n.length ? t() : _();
          }
        });
      };
      _();
    };
    __g.arg = function(n, r) {
      !r && (r = 0);
      for (var t = r, e = (n || []).length, _ = Array(e - r); e > t; t++) _[t - r] = n[t];
      return _;
    };
    __g.args = function(n, r) {
      var t, e = __g.arg(n);
      r && !e[0] ? e.shift() : __define(e, "first", {
        value: e[0]
      });
      t = e[e.length - 1] || e[e.length];
      "function" == typeof t && (__define(e, "callback", {
        value: t
      }), __define(e, "next", {
        value: t
      }), __define(e, "cb", {
        value: t
      }), e.pop());
      e.length && __define(e, "last", {
        value: e[e.length - 1]
      });
      return e;
    };
    __g.merging = function(obj, n, r, t) {
      if (!obj || !n) return null;
      t = t || [];
      var e, obj = r ? __g.clone(obj) : obj;
      for (e in n) !__g.include(t, e) && (obj[e] = n[e]);
      return obj;
    };
    __g.uuid = function() {
      for (var n = [], r = 0; 36 > r; r++) n[r] = Math.floor(16 * Math.random());
      n[14] = 4;
      n[19] = n[19] & 3 | 8;
      for (r = 0; 36 > r; r++) n[r] = "0123456789ABCDEF";
      [ n[r] ];
      n[8] = n[13] = n[18] = n[23] = "-";
      return n.join("");
    };
    __g.suction = function(obj, n, r, t, e) {
      r = r || [];
      !Array.isArray(r) && (r = [ r ]);
      !Array.isArray(t) && (t = [ t ]);
      Object.keys(n).forEach(function(_) {
        if (0 > r.indexOf(_)) {
          var i = t && (t.indexOf(_) > 0 || t[1] === "*") ? t[0] + _ : _;
          obj.hasOwnProperty(_) ? e && (obj[i] = n[_]) : obj[i] = n[_];
        }
      });
    };
  }
  __g.mixin(__g);
  each([ "pop", "push", "reverse", "shift", "sort", "splice", "unshift" ], function(n) {
    var r = __Array[n];
    __g.prototype[n] = function() {
      var obj = this._wrapped;
      r.apply(obj, arguments);
      n != "shift" && n != "splice" || obj.length !== 0 || delete obj[0];
      return result.call(this, obj);
    };
  });
  each([ "concat", "join", "slice" ], function(n) {
    var r = __Array[n];
    __g.prototype[n] = function() {
      return result.call(this, r.apply(this._wrapped, arguments));
    };
  });
  __g.extend(__g.prototype, {
    chain: function() {
      this._chain = !0;
      return this;
    },
    value: function() {
      return this._wrapped;
    }
  });
  if (!n) return {};
  __g.suction(__g, require("../modules/natives"));
  module.paths.unshift(__g.resolve(__dirname, "../modules"));
  __g.mixin(require("_engines/dtml"));
  __g.module = function(n) {
    return require(n);
  };
  __g.modules = function(n, r) {
    var t = {};
    __g.each(n.split(" "), function(n) {
      this[n] = __g.module(n);
    }, t);
    return r ? __g.gc(t) : t;
  };
  __g.patches = function(n) {
    var r = require("patches");
    __g.each(n, function(n, t) {
      r.hasOwnProperty(t) && r[t](n);
    }, n);
    return n;
  };
  __g.gd = function(n) {
    n = n || 0;
    if (n === "native") return __g.merging(new __g(), require("../pac/native"), !0, [ "graceful" ]);
    if (n === 0) {
      var r = __g.merging(this, require("../pac/all"), !0, [ "graceful" ]), t = __g.gc(r);
      delete t.edge;
      return t;
    }
  };
}

var root = this, __Array = Array.prototype, __String = String.prototype, __Object = Object.prototype, __Function = Function.prototype, __each = __Array.forEach, __map = __Array.map, __reduce = __Array.reduce, __right = __Array.reduceRight, __filter = __Array.filter, __every = __Array.every, __some = __Array.some, __index = __Array.indexOf, __last = __Array.lastIndexOf, __bind = __Function.bind, __trim = __String.trim, __ltrim = __String.trimLeft, __rtrim = __String.trimRight, __index = __Array.indexOf, __last = __Array.lastIndexOf, push = __Array.push, slice = __Array.slice, concat = __Array.concat, unshift = __Array.unshift, toString = __Object.toString, hasOwnProperty = __Object.hasOwnProperty, __define = Object.defineProperty, __keys = Object.keys, __isArray = [].isArray, __bind = __Function.bind, __precedent, __break = {}, __g = function(obj) {
  if (obj instanceof __g) return obj;
  if (!(this instanceof __g)) return new __g(obj);
  this._wrapped = obj;
  return this;
}, each = __g.each = __g.forEach = function(obj, n, r) {
  if (__each && obj.forEach === __each) obj.forEach(n, r); else if (obj.length === +obj.length) {
    for (var t = 0, e = obj.length; e > t; t++) if (n.call(r, obj[t], t, obj) === __break) return;
  } else for (var _ in obj) if (__g.has(obj, _) && n.call(r, obj[_], _, obj) === __break) return;
};

__g.map = __g.collect = function(obj, n, r) {
  var t = [];
  if (__map && obj.map === __map) return obj.map(n, r);
  each(obj, function(e, _, i) {
    t[t.length] = n.call(r, e, _, i);
  });
  return t;
};

__g.reduce = __g.foldl = __g.inject = function(obj, n, r, t) {
  var e = arguments.length > 2;
  if (__reduce && obj.reduce === __reduce) {
    t && (n = __g.bind(n, t));
    return e ? obj.reduce(n, r) : obj.reduce(n);
  }
  each(obj, function(_, i, u) {
    if (e) r = n.call(t, r, _, i, u); else {
      r = _;
      e = !0;
    }
  });
  if (!e) throw new TypeError("Reduce of empty array with no initial value");
  return r;
};

__g.reduceRight = __g.foldr = function(obj, n, r, t) {
  var e = arguments.length > 2;
  if (__right && obj.reduceRight === __right) {
    t && (n = __g.bind(n, t));
    return arguments.length > 2 ? obj.reduceRight(n, r) : obj.reduceRight(n);
  }
  var _ = obj.length;
  if (_ !== +_) {
    var i = __g.keys(obj);
    _ = i.length;
  }
  each(obj, function(u, a, c) {
    a = i ? i[--_] : --_;
    if (e) r = n.call(t, r, obj[a], a, c); else {
      r = obj[a];
      e = !0;
    }
  });
  if (!e) throw new TypeError("Reduce of empty array with no initial value");
  return r;
};

__g.find = __g.detect = function(obj, n, r) {
  var t;
  any(obj, function(e, _, i) {
    if (n.call(r, e, _, i)) {
      t = e;
      return !0;
    }
  });
  return t;
};

__g.filter = __g.select = function(obj, n, r) {
  var t = [];
  if (__filter && obj.filter === __filter) return obj.filter(n, r);
  each(obj, function(e, _, i) {
    n.call(r, e, _, i) && (t[t.length] = e);
  });
  return t;
};

__g.reject = function(obj, n, r) {
  var t = [];
  each(obj, function(e, _, i) {
    n.call(r, e, _, i) || (t[t.length] = e);
  });
  return t;
};

__g.every = __g.all = function(obj, n, r) {
  n || (n = __g.identity);
  var t = !0;
  if (__every && obj.every === __every) return obj.every(n, r);
  each(obj, function(e, _, i) {
    return (t = t && n.call(r, e, _, i)) ? void 0 : __break;
  });
  return !!t;
};

var any = __g.some = __g.any = function(obj, n, r) {
  n || (n = __g.identity);
  var t = !1;
  if (__some && obj.some === __some) return obj.some(n, r);
  each(obj, function(e, _, i) {
    return t || (t = n.call(r, e, _, i)) ? __break : void 0;
  });
  return !!t;
};

__g.contains = __g.include = function(obj, n) {
  var r = !1;
  if (__index && obj.indexOf === __index) return obj.indexOf(n) != -1;
  r = any(obj, function(r) {
    return r === n;
  });
  return r;
};

__g.invoke = function(obj, n) {
  var r = slice.call(arguments, 2);
  return __g.map(obj, function(t) {
    return (__g.isFunction(n) ? n : t[n]).apply(t, r);
  });
};

__g.pluck = function(obj, n) {
  return __g.map(obj, function(r) {
    return r[n];
  });
};

__g.where = function(obj, n) {
  return __g.isEmpty(n) ? [] : __g.filter(obj, function(r) {
    for (var t in n) if (n[t] !== r[t]) return !1;
    return !0;
  });
};

__g.max = function(obj, n, r) {
  if (!n && __g.isArray(obj) && obj[0] === +obj[0] && 65535 > obj.length) return Math.max.apply(Math, obj);
  if (!n && __g.isEmpty(obj)) return -1/0;
  var t = {
    computed: -1/0
  };
  each(obj, function(e, _, i) {
    var u = n ? n.call(r, e, _, i) : e;
    u >= t.computed && (t = {
      value: e,
      computed: u
    });
  });
  return t.value;
};

__g.min = function(obj, n, r) {
  if (!n && __g.isArray(obj) && obj[0] === +obj[0] && 65535 > obj.length) return Math.min.apply(Math, obj);
  if (!n && __g.isEmpty(obj)) return 1/0;
  var t = {
    computed: 1/0
  };
  each(obj, function(e, _, i) {
    var u = n ? n.call(r, e, _, i) : e;
    t.computed > u && (t = {
      value: e,
      computed: u
    });
  });
  return t.value;
};

__g.shuffle = function(obj) {
  var n, r = 0, t = [];
  each(obj, function(e) {
    n = __g.random(r++);
    t[r - 1] = t[n];
    t[n] = e;
  });
  return t;
};

var lookupIterator = function(n) {
  return __g.isFunction(n) ? n : function(obj) {
    return obj[n];
  };
};

__g.sortBy = function(obj, n, r) {
  var t = lookupIterator(n);
  return __g.pluck(__g.map(obj, function(n, e, _) {
    return {
      value: n,
      index: e,
      criteria: t.call(r, n, e, _)
    };
  }).sort(function(n, r) {
    var t = n.criteria, e = r.criteria;
    if (t !== e) {
      if (t > e || t === void 0) return 1;
      if (e > t || e === void 0) return -1;
    }
    return r.index > n.index ? -1 : 1;
  }), "value");
};

var group = function(obj, n, r, t) {
  var e = {}, _ = lookupIterator(n);
  each(obj, function(n, i) {
    var u = _.call(r, n, i, obj);
    t(e, u, n);
  });
  return e;
};

__g.groupBy = function(obj, n, r) {
  return group(obj, n, r, function(n, r, t) {
    (__g.has(n, r) ? n[r] : n[r] = []).push(t);
  });
};

__g.countBy = function(obj, n, r) {
  return group(obj, n, r, function(n, r) {
    __g.has(n, r) || (n[r] = 0);
    n[r]++;
  });
};

__g.sortedIndex = function(n, obj, r, t) {
  r = r == null ? __g.identity : lookupIterator(r);
  var e = r.call(t, obj), _ = 0, i = n.length;
  while (i > _) {
    var u = _ + i >>> 1;
    e > r.call(t, n[u]) ? _ = u + 1 : i = u;
  }
  return _;
};

__g.toArray = function(obj) {
  return obj ? obj.length === +obj.length ? slice.call(obj) : __g.values(obj) : [];
};

__g.size = function(obj) {
  return obj.length === +obj.length ? obj.length : __g.keys(obj).length;
};

__g.first = __g.head = __g.take = function(n, r, t) {
  return r == null || t ? n[0] : slice.call(n, 0, r);
};

__g.initial = function(n, r, t) {
  return slice.call(n, 0, n.length - (r == null || t ? 1 : r));
};

__g.last = function(n, r, t) {
  return r == null || t ? n[n.length - 1] : slice.call(n, Math.max(n.length - r, 0));
};

__g.rest = __g.tail = __g.drop = function(n, r, t) {
  return slice.call(n, r == null || t ? 1 : r);
};

__g.compact = function(n) {
  return __g.filter(n, function(n) {
    return !!n;
  });
};

var flatten = function(n, r, t) {
  each(n, function(n) {
    __g.isArray(n) ? r ? push.apply(t, n) : flatten(n, r, t) : t.push(n);
  });
  return t;
};

__g.flatten = function(n, r) {
  return flatten(n, r, []);
};

__g.without = function(n) {
  return __g.difference(n, slice.call(arguments, 1));
};

__g.uniq = __g.unique = function(n, r, t, e) {
  var _ = t ? __g.map(n, t, e) : n, i = [], u = [];
  each(_, function(t, e) {
    if (r ? !e || u[u.length - 1] !== t : !__g.contains(u, t)) {
      u.push(t);
      i.push(n[e]);
    }
  });
  return i;
};

__g.union = function() {
  return __g.uniq(concat.apply(__Array, arguments));
};

__g.intersection = function(n) {
  var r = slice.call(arguments, 1);
  return __g.filter(__g.uniq(n), function(n) {
    return __g.every(r, function(r) {
      return __g.indexOf(r, n) >= 0;
    });
  });
};

__g.difference = function(n) {
  var r = concat.apply(__Array, slice.call(arguments, 1));
  return __g.filter(n, function(n) {
    return !__g.contains(r, n);
  });
};

__g.zip = function() {
  for (var n = slice.call(arguments), r = __g.max(__g.pluck(n, "length")), t = Array(r), e = 0; r > e; e++) t[e] = __g.pluck(n, "" + e);
  return t;
};

__g.object = function(n, r) {
  for (var t = {}, e = 0, _ = n.length; _ > e; e++) r ? t[n[e]] = r[e] : t[n[e][0]] = n[e][1];
  return t;
};

__g.indexOf = function(n, r, t) {
  var e = 0, _ = n.length;
  if (t) {
    if (typeof t != "number") {
      e = __g.sortedIndex(n, r);
      return n[e] === r ? e : -1;
    }
    e = 0 > t ? Math.max(0, _ + t) : t;
  }
  if (__index && n.indexOf === __index) return n.indexOf(r, t);
  for (;_ > e; e++) if (n[e] === r) return e;
  return -1;
};

__g.lastIndexOf = function(n, r, t) {
  var e = t != null;
  if (__last && n.lastIndexOf === __last) return e ? n.lastIndexOf(r, t) : n.lastIndexOf(r);
  var _ = e ? t : n.length;
  while (_--) if (n[_] === r) return _;
  return -1;
};

__g.range = function(n, r, t) {
  if (1 >= arguments.length) {
    r = n || 0;
    n = 0;
  }
  t = arguments[2] || 1;
  var e = Math.max(Math.ceil((r - n) / t), 0), _ = 0, i = Array(e);
  while (e > _) {
    i[_++] = n;
    n += t;
  }
  return i;
};

var ctor = function() {};

__g.bind = function(n, r) {
  var t, e;
  if (n.bind === __bind && __bind) return __bind.apply(n, slice.call(arguments, 1));
  if (!__g.isFunction(n)) throw new TypeError();
  e = slice.call(arguments, 2);
  return t = function() {
    if (!(this instanceof t)) return n.apply(r, e.concat(slice.call(arguments)));
    ctor.prototype = n.prototype;
    var _ = new ctor(), i = n.apply(_, e.concat(slice.call(arguments)));
    return Object(i) === i ? i : _;
  };
};

__g.bindAll = function(obj) {
  var n = slice.call(arguments, 1);
  n.length == 0 && (n = __g.functions(obj));
  each(n, function(n) {
    obj[n] = __g.bind(obj[n], obj);
  });
  return obj;
};

__g.memoize = function(n, r) {
  var t = {};
  r || (r = __g.identity);
  return function() {
    var e = r.apply(this, arguments);
    return __g.has(t, e) ? t[e] : t[e] = n.apply(this, arguments);
  };
};

__g.delay = function(n, r) {
  var t = slice.call(arguments, 2);
  return setTimeout(function() {
    return n.apply(null, t);
  }, r);
};

__g.defer = function(n) {
  return __g.delay.apply(__g, [ n, 1 ].concat(slice.call(arguments, 1)));
};

__g.throttle = function(n, r) {
  var t, e, _, i, u, a, c = __g.debounce(function() {
    u = i = !1;
  }, r);
  return function() {
    t = this;
    e = arguments;
    var o = function() {
      _ = null;
      u && (a = n.apply(t, e));
      c();
    };
    _ || (_ = setTimeout(o, r));
    if (i) u = !0; else {
      i = !0;
      a = n.apply(t, e);
    }
    c();
    return a;
  };
};

__g.debounce = function(n, r, t) {
  var e, _;
  return function() {
    var i = this, u = arguments, a = function() {
      e = null;
      t || (_ = n.apply(i, u));
    }, c = t && !e;
    clearTimeout(e);
    e = setTimeout(a, r);
    c && (_ = n.apply(i, u));
    return _;
  };
};

__g.once = function(n) {
  var r, t = !1;
  return function() {
    if (t) return r;
    t = !0;
    r = n.apply(this, arguments);
    n = null;
    return r;
  };
};

__g.wrap = function(n, r) {
  return function() {
    var t = [ n ];
    push.apply(t, arguments);
    return r.apply(this, t);
  };
};

__g.compose = function() {
  var n = arguments;
  return function() {
    for (var r = arguments, t = n.length - 1; t >= 0; t--) r = [ n[t].apply(this, r) ];
    return r[0];
  };
};

__g.after = function(n, r) {
  return n > 0 ? function() {
    return 1 > --n ? r.apply(this, arguments) : void 0;
  } : r();
};

__g.keys = __keys || function(obj) {
  if (obj !== Object(obj)) throw new TypeError("Invalid object");
  var n = [];
  for (var r in obj) __g.has(obj, r) && (n[n.length] = r);
  return n;
};

__g.values = function(obj) {
  var n = [];
  for (var r in obj) __g.has(obj, r) && n.push(obj[r]);
  return n;
};

__g.pairs = function(obj) {
  var n = [];
  for (var r in obj) __g.has(obj, r) && n.push([ r, obj[r] ]);
  return n;
};

__g.invert = function(obj) {
  var n = {};
  for (var r in obj) __g.has(obj, r) && (n[obj[r]] = r);
  return n;
};

__g.functions = __g.methods = function(obj) {
  var n = [];
  for (var r in obj) __g.isFunction(obj[r]) && n.push(r);
  return n.sort();
};

__g.extend = function(obj) {
  each(slice.call(arguments, 1), function(n) {
    for (var r in n) obj[r] = n[r];
  });
  return obj;
};

__g.pick = function(obj) {
  var n = {}, r = concat.apply(__Array, slice.call(arguments, 1));
  each(r, function(r) {
    r in obj && (n[r] = obj[r]);
  });
  return n;
};

__g.omit = function(obj) {
  var n = {}, r = concat.apply(__Array, slice.call(arguments, 1));
  for (var t in obj) __g.contains(r, t) || (n[t] = obj[t]);
  return n;
};

__g.defaults = function(obj) {
  each(slice.call(arguments, 1), function(n) {
    for (var r in n) obj[r] == null && (obj[r] = n[r]);
  });
  return obj;
};

__g.clone = function(obj) {
  return __g.isObject(obj) ? __g.isArray(obj) ? obj.slice() : __g.extend({}, obj) : obj;
};

__g.tap = function(obj, n) {
  n(obj);
  return obj;
};

var eq = function(n, r, t, e) {
  if (n === r) return n !== 0 || 1 / n == 1 / r;
  if (n == null || r == null) return n === r;
  n instanceof __g && (n = n._wrapped);
  r instanceof __g && (r = r._wrapped);
  var _ = toString.call(n);
  if (_ != toString.call(r)) return !1;
  switch (_) {
   case "[object String]":
    return n == r + "";

   case "[object Number]":
    return n != +n ? r != +r : n == 0 ? 1 / n == 1 / r : n == +r;

   case "[object Date]":
   case "[object Boolean]":
    return +n == +r;

   case "[object RegExp]":
    return n.source == r.source && n.global == r.global && n.multiline == r.multiline && n.ignoreCase == r.ignoreCase;
  }
  if (typeof n != "object" || typeof r != "object") return !1;
  var i = t.length;
  while (i--) if (t[i] == n) return e[i] == r;
  t.push(n);
  e.push(r);
  var u = 0, a = !0;
  if (_ == "[object Array]") {
    u = n.length;
    a = u == r.length;
    if (a) while (u--) if (!(a = eq(n[u], r[u], t, e))) break;
  } else {
    var c = n.constructor, o = r.constructor;
    if (c !== o && !(__g.isFunction(c) && c instanceof c && __g.isFunction(o) && o instanceof o)) return !1;
    for (var l in n) if (__g.has(n, l)) {
      u++;
      if (!(a = __g.has(r, l) && eq(n[l], r[l], t, e))) break;
    }
    if (a) {
      for (l in r) if (__g.has(r, l) && !u--) break;
      a = !u;
    }
  }
  t.pop();
  e.pop();
  return a;
};

__g.isEqual = function(n, r) {
  return eq(n, r, [], []);
};

__g.isEmpty = function(obj) {
  if (obj == null) return !0;
  if (__g.isArray(obj) || __g.isString(obj)) return obj.length === 0;
  for (var n in obj) if (__g.has(obj, n)) return !1;
  return !0;
};

__g.isElement = function(obj) {
  return obj && obj.nodeType === 1;
};

__g.isArray = __isArray || function(obj) {
  return toString.call(obj) == "[object Array]";
};

__g.isObject = function(obj) {
  return obj === Object(obj);
};

each([ "Arguments", "Function", "String", "Number", "Date", "RegExp" ], function(n) {
  __g["is" + n] = function(obj) {
    return toString.call(obj) == "[object " + n + "]";
  };
});

__g.isArguments = function(obj) {
  return obj && __g.has(obj, "callee");
};

__g.isFunction = function(obj) {
  return typeof obj == "function";
};

__g.isFinite = function(obj) {
  return __g.isNumber(obj) && isFinite(obj);
};

__g.isNaN = function(obj) {
  return __g.isNumber(obj) && obj != +obj;
};

__g.isBoolean = function(obj) {
  return obj === !0 || obj === !1 || toString.call(obj) == "[object Boolean]";
};

__g.isNull = function(obj) {
  return obj === null;
};

__g.isUndefined = function(obj) {
  return obj === void 0;
};

__g.has = function(obj, n) {
  return hasOwnProperty.call(obj, n);
};

__g.identity = function(n) {
  return n;
};

__g.times = function(n, r, t) {
  for (var e = 0; n > e; e++) r.call(t, e);
};

__g.random = function(n, r) {
  if (r == null) {
    r = n;
    n = 0;
  }
  return n + (0 | Math.random() * (r - n + 1));
};

var entityMap = {
  escape: {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#x27;",
    "/": "&#x2F;"
  }
};

entityMap.unescape = __g.invert(entityMap.escape);

var entityRegexes = {
  escape: RegExp("[" + __g.keys(entityMap.escape).join("") + "]", "g"),
  unescape: RegExp("(" + __g.keys(entityMap.unescape).join("|") + ")", "g")
};

__g.each([ "escape", "unescape" ], function(n) {
  __g[n] = function(r) {
    return r == null ? "" : ("" + r).replace(entityRegexes[n], function(r) {
      return entityMap[n][r];
    });
  };
});

__g.result = function(n, r) {
  if (n == null) return null;
  var t = n[r];
  return __g.isFunction(t) ? t.call(n) : t;
};

__g.mixin = function(obj) {
  each(__g.functions(obj), function(n) {
    var r = __g[n] = obj[n];
    __g.prototype[n] = function() {
      var n = [ this._wrapped ];
      push.apply(n, arguments);
      return result.call(this, r.apply(__g, n));
    };
  });
};

var idCounter = 0;

__g.uniqueId = function(n) {
  var r = idCounter++;
  return n ? n + r : r;
};

__g.chain = function(obj) {
  return __g(obj).chain();
};

var result = function(obj) {
  return this._chain ? __g(obj).chain() : obj;
};

exports && module.exports && (exports = module.exports = __g);